name: Chap 4 Pipeline

on: push

env:
  APP: my-cool-app

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python environment
        uses: actions/setup-python@v5.2.0

      - name: Install Requirements
        run: pip install --quiet --requirement ./Ch04/04_02/requirements.txt

      - name: Lint Code
        run: |
          flake8 --ignore=E501,E231 ./Ch04/04_02/*.py
          pylint --disable=C0301 ./Ch04/04_02/*.py
        # E501: Line too long (>79 characters).
        # E231: Missing whitespace after a comma or colon.
        # --disable=C0301: Disables the rule for line length exceeding the limit.
        # --disable=C0326: Disables the rule for inconsistent spacing.

      - name: Run unit tests
        run: |
            python -m unittest --verbose --failfast

  build_image:
    needs: [lint]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up GCloud
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '274.0.1'
        service_account_email: ${{ secrets.GCP_SERVICE_ACCT_EMAIL }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
    - run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set run/region ${{ secrets.GCP_REGION }}
        gcloud auth configure-docker
        gcloud info
    
    - name: Build and tag image
      run: docker build -t "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest" .
      
    - name: Push to GCP image registry
      run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest

  test_image:
    needs: [build_image]
    runs-on: ubuntu-18.04
    steps:
    - name: Set up GCloud
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '274.0.1'
        service_account_email: ${{ secrets.GCP_SERVICE_ACCT_EMAIL }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
    - run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set run/region ${{ secrets.GCP_REGION }}
        gcloud auth configure-docker
        gcloud info
      
    - name: Run unit tests in container
      run: docker run "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest" -m unittest --verbose --failfast

  deploy:
    needs: [test_image]
    runs-on: ubuntu-18.04
    steps:
    - name: Set up GCloud
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '274.0.1'
        service_account_email: ${{ secrets.GCP_SERVICE_ACCT_EMAIL }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
    - run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set run/region ${{ secrets.GCP_REGION }}
        gcloud info
        
    - name: Deploy to Cloud Run
      run: gcloud run deploy ${{ env.APPLICATION_NAME }} --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest --platform=managed --allow-unauthenticated

    - name: Test deployment
      run: |
        DEPLOY_URL=$(gcloud run services describe app2 --platform=managed --region=us-central1 | grep https)
        curl -sL --max-time 300 -o /dev/null -w "%{http_code}" $DEPLOY_URL | grep 200 || exit 1